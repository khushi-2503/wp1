openapi: 3.0.0
servers:
  - url: https://api.wp1.openzim.org/v1
    description: Production server HTTPS
  - url: http://api.wp1.openzim.org/v1
    description: Production server HTTP
info:
  description: 'Wikipedia 1.0 is an editing project on Wikipedia. It includes a bot, called the WP 1.0 bot, and a frontend web interface for that bot which lives at https://wp1.openzim.org. This document describes the server that acts as the API backend for that frontend server. Generally speaking, it contains only features which are useful to that frontend. However it is documented here and made available without restriction in the hopes that it may be useful.'
  version: 'v1'
  title: 'WP 1.0 Frontend'
  contact:
    name: 'Travis Briggs'
    email: 'audiodude@gmail.com'
  license:
    name: 'GPL v2 or greater'
    url: 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html'
paths:
  /projects:
    get:
      summary: 'List all projects that the WP 1.0 bot updates'
      operationId: listProjects
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  /projects/count:
    get:
      summary: 'Count of the total number of projects'
      operationId: countProjects
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
  /projects/{projectId}/table:
    get:
      summary: 'Data for building a summary table for a given project'
      operationId: projectTable
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  table_data:
                    type: object
                    description: 'The various data needed to construct the table'
        404:
          description: 'No project with that projectId was found'
    parameters:
      - name: projectId
        in: path
        required: true
        description: 'The name of the project, with spaces replaced by "_"'
        schema:
          type: string
  /projects/{projectId}/articles:
    get:
      summary: 'List of articles for a project, optionally filtered by quality/importance'
      operationId: projectArticles
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    type: object
                    properties:
                      page:
                        type: number
                        description: 'The current page of results. Will be 1 if no page is specified'
                      total:
                        type: number
                        description: 'The total number of results for the query'
                      total_pages:
                        type: number
                        description: 'The total number of pages of results, by 100'
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
        400:
          description: 'The page parameter was either not a number, or a negative number'
        404:
          description: 'No project with that projectId was found'
    parameters:
      - name: projectId
        in: path
        required: true
        description: 'The name of the project, with spaces replaced by "_"'
        schema:
          type: string
      - name: quality
        in: query
        required: false
        description: 'The quality class of articles, used to filter the results. Eg: "FA-Class"'
        schema:
          type: string
      - name: importance
        in: query
        required: false
        description: 'The importance class of articles, used to filter the results. Eg: "High-Class"'
        schema:
          type: string
  /projects/{projectId}/update:
    get:
      summary: 'Schedule a manual update of a project. This includes fetching new assessments from Wikipedia, and updating Wikipedia with assessment and log tables. This can only be done once per hour.'
      operationId: projectUpdate
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  next_update_time:
                    type: string
                    description: 'A string representing the UTC timestamp of when the next manual update can be performed.'
        400:
          description: 'The update could not be performed because it is too soon after another update. Check the next_update_time value in the returned response.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  next_update_time:
                    type: string
                    description: 'A string representing the UTC timestamp of when the next manual update can be performed.'
        404:
          description: 'No project with that projectId was found'
    parameters:
      - name: projectId
        in: path
        required: true
        description: 'The name of the project, with spaces replaced by "_"'
        schema:
          type: string
components:
  schemas:
    Project:
      type: object
      properties:
        name:
          type: string
        last_updated:
          type: string
          description: 'The last time the project was updated, in the date format YYYYMMDDhhmmss. So, year month day, hour minute second'
    Article:
      type: object
      properties:
        article:
          type: string
          description: 'The name of the article, as it appears on Wikipedia'
        article_link:
          type: string
          description: 'A link to the article on Wikipedia'
        importance:
          type: string
          description: 'The importance class of the article'
        quality:
          type: string
          description: 'The quality class of the article'
        importance_updated:
          type: string
          format: date
          description: 'The date on which the article importance classification was updated'
        quality_updated:
          type: string
          format: date
          description: 'The date on which the article quality classification was updated'
